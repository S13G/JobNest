version: 2.1

orbs:
  python: circleci/python@2.0.3

jobs:
  build_and_test:
    executor: python/default
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run tests
          command: |
            python manage.py test

  build_and_test_docker:
    parallelism: 4
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - run:
          name: Configuring environment variables
          command: |
            echo "SECRET_KEY=${SECRET_KEY}" >> .env
            echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" >> .env
            echo "POSTGRES_HOST=${POSTGRES_HOST}" >> .env
            echo "POSTGRES_USER=${POSTGRES_USER}" >> .env
            echo "POSTGRES_NAME=${POSTGRES_NAME}" >> .env
            echo "POSTGRES_PORT=${POSTGRES_PORT}" >> .env
            echo "EMAIL_HOST_USER=${EMAIL_HOST_USER}" >> .env
            echo "EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}" >> .env
            echo "DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}" >> .env
            echo "ADMIN_EMAIL=${ADMIN_EMAIL}" >> .env
            echo "ADMIN_PASSWORD=${ADMIN_PASSWORD}" >> .env
            echo "CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}" >> .env
            echo "CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}" >> .env
            echo "CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}" >> .env
            echo "FLUTTERWAVE_SECRET_KEY=${FLUTTERWAVE_SECRET_KEY}" >> .env
            echo "FLUTTERWAVE_PUBLIC_KEY=${FLUTTERWAVE_PUBLIC_KEY}" >> .env
            echo "FW_VERIFY_LINK=${FW_VERIFY_LINK}" >> .env
            echo "PORT=${PORT}" >> .env
            echo "TREBLLE_API_KEY=${TREBLLE_API_KEY}" >> .env
            echo "TREBLLE_PROJECT_ID=${TREBLLE_PROJECT_ID}" >> .env
      - run:
          name: Build and start Docker Compose services
          command: |
            docker-compose build
            docker-compose up -d
      - run:
          name: Stop and remove Docker Compose services
          command: |
            docker-compose down

workflows:
  run-build-test:
    jobs:
      - build_and_test
      - build_and_test_docker
